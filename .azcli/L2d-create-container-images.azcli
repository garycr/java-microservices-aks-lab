# set the version variable
VERSION=3.0.2

# building all the microservice of the spring petclinic application
cd src
mvn clean package -DskipTests

# Login and upload the compiled container to ACR
az acr login --name $MYACR

# Create a temporary directory for creating the docker images of each microservice and navigate into this directory
mkdir -p staging-acr
cd staging-acr

# Create a docker file in the new directory
FROM mcr.microsoft.com/openjdk/jdk:17-mariner
   
ARG ARTIFACT_NAME
ARG APP_PORT
   
EXPOSE ${APP_PORT} 8778 9779
   
# The application's jar file
ARG JAR_FILE=${ARTIFACT_NAME}
   
# Add the application's jar to the container
ADD ${JAR_FILE} app.jar
   
# Run the jar file
ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]

# Copy all the compiled jar files to this directory
cp ../spring-petclinic-api-gateway/target/spring-petclinic-api-gateway-$VERSION.jar spring-petclinic-api-gateway-$VERSION.jar
cp ../spring-petclinic-admin-server/target/spring-petclinic-admin-server-$VERSION.jar spring-petclinic-admin-server-$VERSION.jar
cp ../spring-petclinic-customers-service/target/spring-petclinic-customers-service-$VERSION.jar spring-petclinic-customers-service-$VERSION.jar
cp ../spring-petclinic-visits-service/target/spring-petclinic-visits-service-$VERSION.jar spring-petclinic-visits-service-$VERSION.jar
cp ../spring-petclinic-vets-service/target/spring-petclinic-vets-service-$VERSION.jar spring-petclinic-vets-service-$VERSION.jar
cp ../spring-petclinic-config-server/target/spring-petclinic-config-server-$VERSION.jar spring-petclinic-config-server-$VERSION.jar
cp ../spring-petclinic-discovery-server/target/spring-petclinic-discovery-server-$VERSION.jar spring-petclinic-discovery-server-$VERSION.jar


# Run an docker build and docker push command to build the container image for the api-gateway and push it to your Azure Container Registry
docker build -t $MYACR.azurecr.io/spring-petclinic-api-gateway:$VERSION --build-arg ARTIFACT_NAME=spring-petclinic-api-gateway-$VERSION.jar --build-arg APP_PORT=8080 .
docker image list
docker push $MYACR.azurecr.io/spring-petclinic-api-gateway:$VERSION

# Now execute the same steps for the admin-server, customers-service, visits-service and vets-service
docker build -t $MYACR.azurecr.io/spring-petclinic-admin-server:$VERSION --build-arg ARTIFACT_NAME=spring-petclinic-admin-server-$VERSION.jar --build-arg APP_PORT=8080 .
docker push $MYACR.azurecr.io/spring-petclinic-admin-server:$VERSION

docker build -t $MYACR.azurecr.io/spring-petclinic-customers-service:$VERSION --build-arg ARTIFACT_NAME=spring-petclinic-customers-service-$VERSION.jar --build-arg APP_PORT=8080 .
docker push $MYACR.azurecr.io/spring-petclinic-customers-service:$VERSION

docker build -t $MYACR.azurecr.io/spring-petclinic-visits-service:$VERSION --build-arg ARTIFACT_NAME=spring-petclinic-visits-service-$VERSION.jar --build-arg APP_PORT=8080 .
docker push $MYACR.azurecr.io/spring-petclinic-visits-service:$VERSION

docker build -t $MYACR.azurecr.io/spring-petclinic-vets-service:$VERSION --build-arg ARTIFACT_NAME=spring-petclinic-vets-service-$VERSION.jar --build-arg APP_PORT=8080 .
docker push $MYACR.azurecr.io/spring-petclinic-vets-service:$VERSION

# Execute the same steps for the config-server, but use 8888 for the APP_PORT
docker build -t $MYACR.azurecr.io/spring-petclinic-config-server:$VERSION --build-arg ARTIFACT_NAME=spring-petclinic-config-server-$VERSION.jar --build-arg APP_PORT=8888 .
docker push $MYACR.azurecr.io/spring-petclinic-config-server:$VERSION

# Execute the same steps for the discovery-server, but use 8761 for the APP_PORT
docker build -t $MYACR.azurecr.io/spring-petclinic-discovery-server:$VERSION --build-arg ARTIFACT_NAME=spring-petclinic-discovery-server-$VERSION.jar --build-arg APP_PORT=8761 .
docker push $MYACR.azurecr.io/spring-petclinic-discovery-server:$VERSION

# list the contents of your repository again, you should see all your container images
az acr repository list -n $MYACR

# show the tags
az acr repository show-tags -n $MYACR --repository spring-petclinic-customers-service
